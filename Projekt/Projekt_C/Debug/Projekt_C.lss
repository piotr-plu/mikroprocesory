
Projekt_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000034c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  0000034c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000034c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000037c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  000003b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000093f  00000000  00000000  00000418  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006b0  00000000  00000000  00000d57  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000040a  00000000  00000000  00001407  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000010c  00000000  00000000  00001814  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a7  00000000  00000000  00001920  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000033b  00000000  00000000  00001cc7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002002  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 89 00 	jmp	0x112	; 0x112 <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__vector_16>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 1f 01 	call	0x23e	; 0x23e <main>
  74:	0c 94 6a 01 	jmp	0x2d4	; 0x2d4 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <AVG>:
}

void init_Volt(){
	wyborDDR |= 0x0f;
	ADMUX = (1<<REFS1)|(1<<REFS0)|(1<<MUX4); //Vref=2,55V
	ADCSRA = (1<<ADEN)|(1<<ADIE)|(1<<ADATE); //w³¹czenie ADC i preskaler 128
  7c:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  80:	31 e0       	ldi	r19, 0x01	; 1
  82:	32 0f       	add	r19, r18
  84:	30 93 60 00 	sts	0x0060, r19	; 0x800060 <__DATA_REGION_ORIGIN__>
  88:	20 31       	cpi	r18, 0x10	; 16
  8a:	91 f4       	brne	.+36     	; 0xb0 <AVG+0x34>
  8c:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <pomiar>
  90:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <pomiar+0x1>
  94:	32 95       	swap	r19
  96:	22 95       	swap	r18
  98:	2f 70       	andi	r18, 0x0F	; 15
  9a:	23 27       	eor	r18, r19
  9c:	3f 70       	andi	r19, 0x0F	; 15
  9e:	23 27       	eor	r18, r19
  a0:	30 93 65 00 	sts	0x0065, r19	; 0x800065 <srednia+0x1>
  a4:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <srednia>
  a8:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <pomiar+0x1>
  ac:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <pomiar>
  b0:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <pomiar>
  b4:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <pomiar+0x1>
  b8:	82 0f       	add	r24, r18
  ba:	93 1f       	adc	r25, r19
  bc:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <pomiar+0x1>
  c0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <pomiar>
  c4:	08 95       	ret

000000c6 <__vector_16>:
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	2f 93       	push	r18
  d2:	3f 93       	push	r19
  d4:	4f 93       	push	r20
  d6:	5f 93       	push	r21
  d8:	6f 93       	push	r22
  da:	7f 93       	push	r23
  dc:	8f 93       	push	r24
  de:	9f 93       	push	r25
  e0:	af 93       	push	r26
  e2:	bf 93       	push	r27
  e4:	ef 93       	push	r30
  e6:	ff 93       	push	r31
  e8:	84 b1       	in	r24, 0x04	; 4
  ea:	95 b1       	in	r25, 0x05	; 5
  ec:	0e 94 3e 00 	call	0x7c	; 0x7c <AVG>
  f0:	ff 91       	pop	r31
  f2:	ef 91       	pop	r30
  f4:	bf 91       	pop	r27
  f6:	af 91       	pop	r26
  f8:	9f 91       	pop	r25
  fa:	8f 91       	pop	r24
  fc:	7f 91       	pop	r23
  fe:	6f 91       	pop	r22
 100:	5f 91       	pop	r21
 102:	4f 91       	pop	r20
 104:	3f 91       	pop	r19
 106:	2f 91       	pop	r18
 108:	0f 90       	pop	r0
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	0f 90       	pop	r0
 10e:	1f 90       	pop	r1
 110:	18 95       	reti

00000112 <__vector_11>:
 112:	1f 92       	push	r1
 114:	0f 92       	push	r0
 116:	0f b6       	in	r0, 0x3f	; 63
 118:	0f 92       	push	r0
 11a:	11 24       	eor	r1, r1
 11c:	8f 93       	push	r24
 11e:	b7 99       	sbic	0x16, 7	; 22
 120:	0f c0       	rjmp	.+30     	; 0x140 <__vector_11+0x2e>
 122:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <klawisz>
 126:	88 23       	and	r24, r24
 128:	19 f0       	breq	.+6      	; 0x130 <__vector_11+0x1e>
 12a:	81 30       	cpi	r24, 0x01	; 1
 12c:	29 f0       	breq	.+10     	; 0x138 <__vector_11+0x26>
 12e:	15 c0       	rjmp	.+42     	; 0x15a <__vector_11+0x48>
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <klawisz>
 136:	11 c0       	rjmp	.+34     	; 0x15a <__vector_11+0x48>
 138:	82 e0       	ldi	r24, 0x02	; 2
 13a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <klawisz>
 13e:	0d c0       	rjmp	.+26     	; 0x15a <__vector_11+0x48>
 140:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <klawisz>
 144:	83 30       	cpi	r24, 0x03	; 3
 146:	19 f0       	breq	.+6      	; 0x14e <__vector_11+0x3c>
 148:	84 30       	cpi	r24, 0x04	; 4
 14a:	29 f0       	breq	.+10     	; 0x156 <__vector_11+0x44>
 14c:	06 c0       	rjmp	.+12     	; 0x15a <__vector_11+0x48>
 14e:	84 e0       	ldi	r24, 0x04	; 4
 150:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <klawisz>
 154:	02 c0       	rjmp	.+4      	; 0x15a <__vector_11+0x48>
 156:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <klawisz>
 15a:	8f 91       	pop	r24
 15c:	0f 90       	pop	r0
 15e:	0f be       	out	0x3f, r0	; 63
 160:	0f 90       	pop	r0
 162:	1f 90       	pop	r1
 164:	18 95       	reti

00000166 <LCD_zapis>:
 166:	98 b3       	in	r25, 0x18	; 24
 168:	90 7f       	andi	r25, 0xF0	; 240
 16a:	98 bb       	out	0x18, r25	; 24
 16c:	98 b3       	in	r25, 0x18	; 24
 16e:	28 2f       	mov	r18, r24
 170:	22 95       	swap	r18
 172:	2f 70       	andi	r18, 0x0F	; 15
 174:	92 2b       	or	r25, r18
 176:	98 bb       	out	0x18, r25	; 24
 178:	98 b3       	in	r25, 0x18	; 24
 17a:	90 62       	ori	r25, 0x20	; 32
 17c:	98 bb       	out	0x18, r25	; 24
 17e:	9a e0       	ldi	r25, 0x0A	; 10
 180:	9a 95       	dec	r25
 182:	f1 f7       	brne	.-4      	; 0x180 <LCD_zapis+0x1a>
 184:	00 c0       	rjmp	.+0      	; 0x186 <LCD_zapis+0x20>
 186:	98 b3       	in	r25, 0x18	; 24
 188:	9f 7d       	andi	r25, 0xDF	; 223
 18a:	98 bb       	out	0x18, r25	; 24
 18c:	90 ef       	ldi	r25, 0xF0	; 240
 18e:	9a 95       	dec	r25
 190:	f1 f7       	brne	.-4      	; 0x18e <LCD_zapis+0x28>
 192:	98 b3       	in	r25, 0x18	; 24
 194:	90 7f       	andi	r25, 0xF0	; 240
 196:	98 bb       	out	0x18, r25	; 24
 198:	98 b3       	in	r25, 0x18	; 24
 19a:	8f 70       	andi	r24, 0x0F	; 15
 19c:	89 2b       	or	r24, r25
 19e:	88 bb       	out	0x18, r24	; 24
 1a0:	88 b3       	in	r24, 0x18	; 24
 1a2:	80 62       	ori	r24, 0x20	; 32
 1a4:	88 bb       	out	0x18, r24	; 24
 1a6:	8a e0       	ldi	r24, 0x0A	; 10
 1a8:	8a 95       	dec	r24
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <LCD_zapis+0x42>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <LCD_zapis+0x48>
 1ae:	88 b3       	in	r24, 0x18	; 24
 1b0:	8f 7d       	andi	r24, 0xDF	; 223
 1b2:	88 bb       	out	0x18, r24	; 24
 1b4:	90 ef       	ldi	r25, 0xF0	; 240
 1b6:	9a 95       	dec	r25
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_zapis+0x50>
 1ba:	08 95       	ret

000001bc <LCD_napis>:
 1bc:	0f 93       	push	r16
 1be:	1f 93       	push	r17
 1c0:	cf 93       	push	r28
 1c2:	8c 01       	movw	r16, r24
 1c4:	88 b3       	in	r24, 0x18	; 24
 1c6:	80 61       	ori	r24, 0x10	; 16
 1c8:	88 bb       	out	0x18, r24	; 24
 1ca:	c0 e0       	ldi	r28, 0x00	; 0
 1cc:	03 c0       	rjmp	.+6      	; 0x1d4 <LCD_napis+0x18>
 1ce:	cf 5f       	subi	r28, 0xFF	; 255
 1d0:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_zapis>
 1d4:	f8 01       	movw	r30, r16
 1d6:	ec 0f       	add	r30, r28
 1d8:	f1 1d       	adc	r31, r1
 1da:	80 81       	ld	r24, Z
 1dc:	81 11       	cpse	r24, r1
 1de:	f7 cf       	rjmp	.-18     	; 0x1ce <LCD_napis+0x12>
 1e0:	cf 91       	pop	r28
 1e2:	1f 91       	pop	r17
 1e4:	0f 91       	pop	r16
 1e6:	08 95       	ret

000001e8 <init_LCD>:
 1e8:	87 b3       	in	r24, 0x17	; 23
 1ea:	8f 63       	ori	r24, 0x3F	; 63
 1ec:	87 bb       	out	0x17, r24	; 23
 1ee:	88 b3       	in	r24, 0x18	; 24
 1f0:	8f 7e       	andi	r24, 0xEF	; 239
 1f2:	88 bb       	out	0x18, r24	; 24
 1f4:	83 e3       	ldi	r24, 0x33	; 51
 1f6:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_zapis>
 1fa:	82 e3       	ldi	r24, 0x32	; 50
 1fc:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_zapis>
 200:	88 e2       	ldi	r24, 0x28	; 40
 202:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_zapis>
 206:	86 e0       	ldi	r24, 0x06	; 6
 208:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_zapis>
 20c:	8f e0       	ldi	r24, 0x0F	; 15
 20e:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_zapis>
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_zapis>
 218:	8e e0       	ldi	r24, 0x0E	; 14
 21a:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_zapis>
 21e:	8f e3       	ldi	r24, 0x3F	; 63
 220:	9f e1       	ldi	r25, 0x1F	; 31
 222:	01 97       	sbiw	r24, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <init_LCD+0x3a>
 226:	00 c0       	rjmp	.+0      	; 0x228 <init_LCD+0x40>
 228:	00 00       	nop
 22a:	08 95       	ret

0000022c <init_Button>:
}

void init_Button(){
	PORTB |= (1<<przycisk); //odpalenie rezystora polaryzuj¹cego
 22c:	88 b3       	in	r24, 0x18	; 24
 22e:	80 68       	ori	r24, 0x80	; 128
 230:	88 bb       	out	0x18, r24	; 24
	TCCR0 = (1<<CS02) | (1<<CS00); //prescaler 1024
 232:	85 e0       	ldi	r24, 0x05	; 5
 234:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1<<TOIE0); //w³¹czenie przerwania OVF T0
 236:	89 b7       	in	r24, 0x39	; 57
 238:	81 60       	ori	r24, 0x01	; 1
 23a:	89 bf       	out	0x39, r24	; 57
 23c:	08 95       	ret

0000023e <main>:
}

int main(void)
{
	init_LCD();
 23e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <init_LCD>
	init_Button();
 242:	0e 94 16 01 	call	0x22c	; 0x22c <init_Button>
	sei();
 246:	78 94       	sei
	
	//LCD_napis("Bagno");
	while (1)
	{
		if(klawisz == 2){
 248:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <klawisz>
 24c:	82 30       	cpi	r24, 0x02	; 2
 24e:	e1 f7       	brne	.-8      	; 0x248 <main+0xa>
			
			LCD_napis((srednia%1000/100)+'0');
 250:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <srednia>
 254:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <srednia+0x1>
 258:	9a 01       	movw	r18, r20
 25a:	36 95       	lsr	r19
 25c:	27 95       	ror	r18
 25e:	36 95       	lsr	r19
 260:	27 95       	ror	r18
 262:	36 95       	lsr	r19
 264:	27 95       	ror	r18
 266:	a5 ec       	ldi	r26, 0xC5	; 197
 268:	b0 e2       	ldi	r27, 0x20	; 32
 26a:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <__umulhisi3>
 26e:	92 95       	swap	r25
 270:	82 95       	swap	r24
 272:	8f 70       	andi	r24, 0x0F	; 15
 274:	89 27       	eor	r24, r25
 276:	9f 70       	andi	r25, 0x0F	; 15
 278:	89 27       	eor	r24, r25
 27a:	68 ee       	ldi	r22, 0xE8	; 232
 27c:	73 e0       	ldi	r23, 0x03	; 3
 27e:	86 9f       	mul	r24, r22
 280:	90 01       	movw	r18, r0
 282:	87 9f       	mul	r24, r23
 284:	30 0d       	add	r19, r0
 286:	96 9f       	mul	r25, r22
 288:	30 0d       	add	r19, r0
 28a:	11 24       	eor	r1, r1
 28c:	ca 01       	movw	r24, r20
 28e:	82 1b       	sub	r24, r18
 290:	93 0b       	sbc	r25, r19
 292:	9c 01       	movw	r18, r24
 294:	36 95       	lsr	r19
 296:	27 95       	ror	r18
 298:	36 95       	lsr	r19
 29a:	27 95       	ror	r18
 29c:	ab e7       	ldi	r26, 0x7B	; 123
 29e:	b4 e1       	ldi	r27, 0x14	; 20
 2a0:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <__umulhisi3>
 2a4:	96 95       	lsr	r25
 2a6:	87 95       	ror	r24
 2a8:	c0 96       	adiw	r24, 0x30	; 48
 2aa:	0e 94 de 00 	call	0x1bc	; 0x1bc <LCD_napis>
			//LCD_napis(srednia%1000/100);
			//LCD_napis(srednia%1000%100/10);
			//LCD_napis(srednia%1000%100%10);
			klawisz = 3;
 2ae:	83 e0       	ldi	r24, 0x03	; 3
 2b0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <klawisz>
 2b4:	c9 cf       	rjmp	.-110    	; 0x248 <main+0xa>

000002b6 <__umulhisi3>:
 2b6:	a2 9f       	mul	r26, r18
 2b8:	b0 01       	movw	r22, r0
 2ba:	b3 9f       	mul	r27, r19
 2bc:	c0 01       	movw	r24, r0
 2be:	a3 9f       	mul	r26, r19
 2c0:	70 0d       	add	r23, r0
 2c2:	81 1d       	adc	r24, r1
 2c4:	11 24       	eor	r1, r1
 2c6:	91 1d       	adc	r25, r1
 2c8:	b2 9f       	mul	r27, r18
 2ca:	70 0d       	add	r23, r0
 2cc:	81 1d       	adc	r24, r1
 2ce:	11 24       	eor	r1, r1
 2d0:	91 1d       	adc	r25, r1
 2d2:	08 95       	ret

000002d4 <_exit>:
 2d4:	f8 94       	cli

000002d6 <__stop_program>:
 2d6:	ff cf       	rjmp	.-2      	; 0x2d6 <__stop_program>
